<configuration>
  <system.webServer>
    <urlCompression doStaticCompression="true" doDynamicCompression="true" />
    <httpCompression staticCompressionIgnoreHitFrequency="true">
      <dynamicTypes>
        <clear />
        <add enabled="true" mimeType="text/*"/>
        <add enabled="true" mimeType="message/*"/>
        <add enabled="true" mimeType="image/*"/>
        <add enabled="true" mimeType="video/*"/>
        <add enabled="true" mimeType="application/x-javascript"/>
        <add enabled="true" mimeType="application/*"/>
        <add enabled="true" mimeType="application/json; charset=utf-8"/>
        <add enabled="true" mimeType="application/json"/>
        <add enabled="true" mimeType="application/atom+xml"/>
        <add enabled="true" mimeType="application/atom+xml;charset=utf-8"/>
        <add enabled="true" mimeType="*/*"/>
      </dynamicTypes>
      <staticTypes>
        <clear />
        <add enabled="true" mimeType="text/*"/>
        <add enabled="true" mimeType="message/*"/>
        <add enabled="true" mimeType="image/*"/>
        <add enabled="true" mimeType="video/*"/>
        <add enabled="true" mimeType="application/javascript"/>
        <add enabled="true" mimeType="application/*"/>
        <add enabled="true" mimeType="application/json; charset=utf-8"/>
        <add enabled="true" mimeType="application/atom+xml"/>
        <add enabled="true" mimeType="application/xaml+xml"/>
        <add enabled="true" mimeType="application/json"/>
        <add enabled="true" mimeType="*/*"/>
      </staticTypes>
    </httpCompression>

    <staticContent>
      <clientCache cacheControlMode="UseMaxAge" cacheControlMaxAge="365.00:00:00" />
      <mimeMap fileExtension=".mp4" mimeType="video/mp4" />
      <mimeMap fileExtension=".png" mimeType="image/png" />
      <mimeMap fileExtension=".jpg" mimeType="image/jpg" />
      <mimeMap fileExtension=".webp" mimeType="image/webp" />
      <mimeMap fileExtension=".json" mimeType="application/json" />
      <mimeMap fileExtension=".js" mimeType="application/javascript" />
      <mimeMap fileExtension=".css" mimeType="text/css" />
    </staticContent> 

    <webSocket enabled="false" />

    <httpProtocol>
       <customHeaders>
           <add name="X-Frame-Options" value="DENY" />
           <add name="X-XSS-Protection" value="1; mode=block" />
        </customHeaders>
    </httpProtocol>
    
    <handlers>
      <!-- Indicates that the server.js file is a node.js site to be handled by the iisnode module -->
      <add name="iisnode" path="server/server.js" verb="*" modules="iisnode"/>
    </handlers>

    <rewrite>
      <rules>
        <rule name="redirect HTTP to HTTPS" enabled="true" stopProcessing="true" lockItem="true">
            <match url="(.*)" />
            <conditions>
                <add input="{HTTPS}" pattern="off" ignoreCase="true" />
                <add input="{WARMUP_REQUEST}" pattern="1" negate="true" />
            </conditions>
            <action type="Redirect" url="https://{HTTP_HOST}/{R:1}" appendQueryString="true" redirectType="Permanent" />
        </rule>
        
        <!-- Do not interfere with requests for node-inspector debugging -->
        <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
          <match url="^server\/server.js\/debug[\/]?" />
        </rule>

        <!-- robots.txt -->
        <rule name="Robots TXT" stopProcessing="true">
          <match url="^robots.txt$" />
          <action type="Rewrite" url="robots.txt"/>
        </rule>

        <!-- sitemap.xml -->
        <rule name="Sitemap XML" stopProcessing="true">
          <match url="^sitemap.xml$" />
          <action type="Rewrite" url="server/public/sitemap.xml"/>
        </rule>

        <!-- All API calls are mapped to server.js -->
        <rule name="API Routes" stopProcessing="true">
          <match url="^api\/.*" />
          <action type="Rewrite" url="server/server.js"/>
        </rule>
        
        <!-- static URLs are mapped to the node.js site entry point -->
        <rule name="Static Routes" stopProcessing="true">
          <match url="^static(.*)$" />
          <action type="Rewrite" url="client/build/static{R:1}"/>
        </rule>

        <!-- SSR calls are mapped to server.js -->
        <rule name="SSR Routes" stopProcessing="true">
          <match url=".*" />
          <action type="Rewrite" url="server/server.js"/>
        </rule>
        
        <!-- React Routes -->
        <rule name="React Routes" stopProcessing="true">
          <match url=".*" />
          <conditions logicalGrouping="MatchAll">
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <!--add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" /-->
            <add input="{REQUEST_URI}" pattern="^/(api)" negate="true" />
          </conditions>
          <action type="Rewrite" url="client/build/" />
        </rule>
      </rules>
      <outboundRules>
          <rule name="Add Strict-Transport-Security when HTTPS" enabled="true">
              <match serverVariable="RESPONSE_Strict_Transport_Security"
                  pattern=".*" />
              <conditions>
                  <add input="{HTTPS}" pattern="on" ignoreCase="true" />
              </conditions>
              <action type="Rewrite" value="max-age=31536000" />
          </rule>
      </outboundRules>
    </rewrite>
    
    <!-- 'bin' directory has no special meaning in node.js and apps can be placed in it -->
    <security>
      <requestFiltering>
        <hiddenSegments>
          <remove segment="bin"/>
        </hiddenSegments>
      </requestFiltering>
    </security>

    <!-- Make sure error responses are left untouched -->
    <httpErrors existingResponse="PassThrough" />

    <!--
      You can control how Node is hosted within IIS using the following options:
        * watchedFiles: semi-colon separated list of files that will be watched for changes to restart the server
        * node_env: will be propagated to node as NODE_ENV environment variable
        * debuggingEnabled - controls whether the built-in debugger is enabled

      See https://github.com/tjanczuk/iisnode/blob/master/src/samples/configuration/web.config for a full list of options
    -->
    <iisnode watchedFiles="web.config;*.js"/>
  </system.webServer>
</configuration>